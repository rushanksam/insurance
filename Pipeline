pipeline {
  agent any

  tools {
    maven 'maven3'
    }
  
  stages {
    stage('CheckOut') {
      steps {
        echo 'Checkout the source code from GitHub'
        git branch: 'master', url: 'https://github.com/rushanksam/insurance.git'
            }
    }
     stage('Package') {
      steps {
        echo 'Generate a jar file the package using Maven'
        sh 'mvn clean package'
            }
    }
     stage('Publish TestNG report') {
      steps {
        echo 'Generate a TestNG report'
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/insure/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
            }
         }
     stage('Create Docker Image') {
      steps{
          script{
              sh 'docker build -t rushanksam/insurance:1.0 .'
                }
            }
    }
     stage('Docker Login & Push') {
      steps {
        echo 'Docker Login & Push'
        withCredentials([usernamePassword(credentialsId: 'dockerhublogin', passwordVariable: 'dockerpwd', usernameVariable: 'dockeruser')]) {
         sh 'docker login -u ${dockeruser} -p ${dockerpwd}'
         sh 'docker push rushanksam/insurance:1.0'
                       }
                    }
             }
      stage('Configure and Deploy to the test-server'){
      steps{ 
         ansiblePlaybook credentialsId: 'ansible-ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'ansible-playbook.yml', vaultTmpPath: ''
        }
         } 
            }

         }
    
